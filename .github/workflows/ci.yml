name: Run Securesystemslib tests

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      # Run tests on each OS/Python combination
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        # TODO: Add windows-latest when gpg issues are solved
        os: [ubuntu-latest, macos-latest]
        toxenv: [py]

        include:
          - python-version: 3.8
            os: ubuntu-latest
            toxenv: purepy38
          - python-version: 3.8
            os: ubuntu-latest
            toxenv: py38-no-gpg
          - python-version: 3.8
            os: ubuntu-latest
            toxenv: lint
          - python-version: 3.x
            os: ubuntu-latest
            toxenv: kms

    runs-on: ${{ matrix.os }}

    permissions:
      id-token: 'write' # for OIDC auth for GCP authentication

    steps:
      - name: Checkout securesystemslib
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Find pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          # Use the os dependent pip cache directory found above
          path: ${{ steps.pip-cache.outputs.dir }}
          # A match with 'key' counts as cache hit
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          # A match with 'restore-keys' is used as fallback
          restore-keys: ${{ runner.os }}-pip-

      - name: 'Authenticate to Google Cloud'
        # Authenticate to GCP KMS, but only if we're running KMS tests
        if: ${{ matrix.toxenv == 'kms' }}
        uses: 'google-github-actions/auth@c4799db9111fba4461e9f9da8732e5057b394f72'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/843741030650/locations/global/workloadIdentityPools/securesystemslib-tests/providers/securesystemslib-tests'
          service_account: 'securesystemslib-tests@python-tuf-kms.iam.gserviceaccount.com'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox

      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
